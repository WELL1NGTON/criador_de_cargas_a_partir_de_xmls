{"version":3,"sources":["components/navbar.jsx","components/mainMenuNav.jsx","components/newTruckLoad.jsx","components/about.jsx","components/viewTruckLoads.jsx","components/mainMenu.jsx","components/nfeMainInfo.jsx","components/nfesContainer.jsx","xml2json.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","selectedFile","className","type","id","multiple","accept","onChange","evt","props","onFilesSelected","target","files","input","hidden","onClick","onClearFiles","Component","MainMenuNav","selected","NONE_ACTIVE","MONTAR_CARGA","VISUALIZAR_CARGAS","ABOUT","navItem","this","setState","getClassName","to","getToLink","onNavItemClick","NewTruckLoad","Fragment","onSubmit","e","preventDefault","value","textAreaAddNewTruck","onNewTruckTextAreaOnChange","aria-describedby","onAddNewTruck","onRemoveTruck","data-toggle","aria-haspopup","aria-expanded","selectedTruck","length","trucks","map","truck","key","onSelectTruck","onAddSelectedFilesToTruck","About","ViewTruckLoads","onShowClassifiedFiles","onShowAllFiles","onShowUnclassifiedFiles","MainMenu","path","exact","component","NfeMainInfo","checked","isChecked","onSelectNfe","xmlObject","nfeProc","NFe","infNFe","ide","nNF","aria-label","dest","xNome","enderDest","xLgr","nro","xBairro","xMun","UF","CEP","transp","vol","pesoL","pesoB","NfesContainer","xmlObjects","checkedNfes","includes","xml2json","xml","tab","X","toObj","o","nodeType","attributes","i","nodeName","nodeValue","toString","firstChild","textChild","cdataChild","hasElementChild","n","nextSibling","match","removeWhite","escape","Array","innerXml","documentElement","alert","toJson","name","ind","json","join","arr","m","node","s","innerHTML","asXml","c","txt","replace","normalize","nxt","removeChild","App","xmlObjectsDisplayed","totalWeight","selectedWeight","handleSelectTruck","handleSelectNfe","nfe","splice","indexOf","push","calculateSelectedWeight","handleAddNewTruck","handleRemoveTruck","handleNewTruckTextAreaOnChange","handleAddSelectedFilesToTruck","console","log","handleShowUnclassifiedFiles","isXmlObjectValid","getJsonFromXml","file","a","Promise","resolve","reject","reader","FileReader","onload","xmlDoc","DOMParser","parseFromString","result","jsonFromXml","JSON","parse","readAsText","handleFiles","isXmlObjectSaved","handleShowAllFiles","handleClearFiles","calculateWeight","handleShowClassifiedFiles","parseFloat","toFixed","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4ef4344.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NavBar extends Component {\n  state = {\n    selectedFile: '',\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark\">\n        {/* <a className=\"navbar-brand\" href=\"#\">\n          Navbar\n        </a> */}\n        <div>\n          <label className=\"btn btn-primary btn-sm m-1\">\n            Importar XMLs\n            <input\n              type=\"file\"\n              id=\"fileElem\"\n              multiple\n              accept=\".xml\"\n              // onchange=\"handleFiles(this.files)\"\n              onChange={(evt) => this.props.onFilesSelected(evt.target.files)}\n              className=\"filestyle\"\n              input=\"false\"\n              hidden\n            />\n          </label>\n\n          <button type=\"button\" className=\"btn btn-warning btn-sm m-1\" onClick={(evt) => this.props.onClearFiles()}>\n            Remover XMLs\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nclass MainMenuNav extends Component {\n  state = {\n    selected: '/',\n  };\n\n  NONE_ACTIVE = '/';\n  MONTAR_CARGA = '/montar-carga';\n  VISUALIZAR_CARGAS = '/visualizar-cargas';\n  ABOUT = '/about';\n\n  getClassName(navItem) {\n    return 'nav-link' + (this.state.selected == navItem ? ' active' : '');\n  }\n\n  getToLink(navItem) {\n    return this.state.selected == navItem ? this.NONE_ACTIVE : navItem;\n  }\n\n  onNavItemClick(navItem) {\n    let selected = this.state.selected == navItem ? this.NONE_ACTIVE : navItem;\n    this.setState({ selected });\n  }\n\n  render() {\n    return (\n      <ul className=\"nav nav-tabs small m-1\">\n        <li className=\"nav-item\">\n          <Link className={this.getClassName(this.MONTAR_CARGA)} to={this.getToLink(this.MONTAR_CARGA)} onClick={() => this.onNavItemClick(this.MONTAR_CARGA)}>\n            Montar Carga\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            className={this.getClassName(this.VISUALIZAR_CARGAS)}\n            to={this.getToLink(this.VISUALIZAR_CARGAS)}\n            onClick={() => this.onNavItemClick(this.VISUALIZAR_CARGAS)}\n          >\n            Vizualizar Cargas\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className={this.getClassName(this.ABOUT)} to={this.getToLink(this.ABOUT)} onClick={() => this.onNavItemClick(this.ABOUT)}>\n            Sobre\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default MainMenuNav;\n","import React, { Component } from 'react';\n\nclass NewTruckLoad extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"form-inline small\" onSubmit={(e) => e.preventDefault()}>\n          <div className=\"form-group\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                value={this.props.textAreaAddNewTruck}\n                // onChange={(evt) => this.handleNewTruckTextAreaOnChange(evt)}\n                onChange={(evt) => this.props.onNewTruckTextAreaOnChange(evt)}\n                className=\"form-control\"\n                aria-describedby=\"basic-addon1\"\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-success btn-sm\" type=\"button\" onClick={() => this.props.onAddNewTruck(this.props.textAreaAddNewTruck)}>\n                  Adicionar Placa\n                </button>\n                <button className=\"btn btn-danger btn-sm\" type=\"button\" onClick={() => this.props.onRemoveTruck(this.props.textAreaAddNewTruck)}>\n                  Remover Placa\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n        <form className=\"form-inline small\" onSubmit={(e) => e.preventDefault()}>\n          <div className=\"form-group\">\n            <div className=\"dropdown open\">\n              <button\n                className=\"btn btn-secondary dropdown-toggle btn-sm m-1\"\n                type=\"button\"\n                id=\"dropdownMenu5\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.props.selectedTruck.length == 0 ? 'Selecione Uma Placa:' : this.props.selectedTruck}\n              </button>\n              <div className=\"dropdown-menu\">\n                {this.props.trucks.map((truck) => (\n                  <a\n                    className=\"dropdown-item\"\n                    key={truck}\n                    onClick={() => {\n                      this.props.onSelectTruck(truck);\n                    }}\n                  >\n                    {truck}\n                  </a>\n                ))}\n              </div>\n            </div>\n          </div>\n        </form>\n        <button className=\"btn btn-primary btn-sm m-1\" type=\"button\" onClick={() => this.props.onAddSelectedFilesToTruck(this.props.selectedTruck)}>\n          Adicionar notas selecionadas a placa {this.props.selectedTruck == '' ? '...' : this.props.selectedTruck}\n        </button>\n\n        <hr />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewTruckLoad;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <p>Desenvolvido por Wellington Carlos Massola</p>\n        <p>Foram utilizados: </p>\n        <ul>\n          <il>\n            <p>React</p>\n          </il>\n          <il>\n            <p>Bootstrap</p>\n          </il>\n          <il>\n            <p>\n              Função de conversão de xml para json de Stefan Goessner/2006 (licensed under Creative Commons GNU LGPL License)\n              https://goessner.net/download/prj/jsonxml/\n            </p>\n          </il>\n        </ul>\n        <hr />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass ViewTruckLoads extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"form-inline small\" onSubmit={(e) => e.preventDefault()}>\n          <button className=\"btn btn-primary btn-sm m-1\" type=\"button\" onClick={() => this.props.onShowClassifiedFiles(this.props.selectedTruck)}>\n            Exibir notas vinculadas a placa {this.props.selectedTruck == '' ? '...' : this.props.selectedTruck}\n          </button>\n          <div className=\"form-group\">\n            <div className=\"dropdown open\">\n              <button\n                className=\"btn btn-secondary dropdown-toggle btn-sm m-1\"\n                type=\"button\"\n                id=\"dropdownMenu5\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {this.props.selectedTruck.length == 0 ? 'Selecione Uma Placa:' : this.props.selectedTruck}\n              </button>\n              <div className=\"dropdown-menu\">\n                {this.props.trucks.map((truck) => (\n                  <a\n                    className=\"dropdown-item\"\n                    key={truck}\n                    onClick={() => {\n                      this.props.onSelectTruck(truck);\n                    }}\n                  >\n                    {truck}\n                  </a>\n                ))}\n              </div>\n            </div>\n          </div>\n        </form>\n        <form className=\"form-inline small\" onSubmit={(e) => e.preventDefault()}>\n          <button className=\"btn btn-success btn-sm m-1\" type=\"button\" onClick={() => this.props.onShowAllFiles(this.props.onShowAllFiles)}>\n            Exibir todas as notas\n          </button>\n          <button className=\"btn btn-success btn-sm m-1\" type=\"button\" onClick={() => this.props.onShowUnclassifiedFiles(this.props.onShowUnclassifiedFiles)}>\n            Exibir notas não vinculadas\n          </button>\n        </form>\n        <form className=\"form-inline small\" onSubmit={(e) => e.preventDefault()}>\n          <button className=\"btn btn-warning btn-sm m-1\" type=\"button\" onClick={() => this.props.onShowClassifiedFiles(this.props.selectedTruck)}>\n            Desvincular notas selecionadas da placa {this.props.selectedTruck == '' ? '...' : this.props.selectedTruck}\n          </button>\n          <button className=\"btn btn-danger btn-sm m-1\" type=\"button\" onClick={() => this.props.onShowClassifiedFiles(this.props.selectedTruck)}>\n            Desvincular todas notas da placa {this.props.selectedTruck == '' ? '...' : this.props.selectedTruck}\n          </button>\n        </form>\n        <hr />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewTruckLoads;\n","import React, { Component } from 'react';\nimport MainMenuNav from './mainMenuNav';\nimport NewTruckLoad from './newTruckLoad';\nimport About from './about';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ViewTruckLoads from './viewTruckLoads';\nclass MainMenu extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <div>\n            <MainMenuNav />\n            <Switch>\n              <Route path=\"/\" exact component={null} />\n              <Route path=\"/montar-carga\">\n                <NewTruckLoad\n                  onAddSelectedFilesToTruck={this.props.onAddSelectedFilesToTruck}\n                  onRemoveTruck={this.props.onRemoveTruck}\n                  onAddNewTruck={this.props.onAddNewTruck}\n                  onNewTruckTextAreaOnChange={this.props.onNewTruckTextAreaOnChange}\n                  onSelectTruck={this.props.onSelectTruck}\n                  textAreaAddNewTruck={this.props.textAreaAddNewTruck}\n                  selectedTruck={this.props.selectedTruck}\n                  trucks={this.props.trucks}\n                />\n              </Route>\n              <Route path=\"/visualizar-cargas\">\n                <ViewTruckLoads\n                  onShowClassifiedFiles={this.props.onShowClassifiedFiles}\n                  onShowAllFiles={this.props.onShowAllFiles}\n                  onShowUnclassifiedFiles={this.props.onShowUnclassifiedFiles}\n                  onRemoveTruck={this.props.onRemoveTruck}\n                  onAddNewTruck={this.props.onAddNewTruck}\n                  onNewTruckTextAreaOnChange={this.props.onNewTruckTextAreaOnChange}\n                  onSelectTruck={this.props.onSelectTruck}\n                  textAreaAddNewTruck={this.props.textAreaAddNewTruck}\n                  selectedTruck={this.props.selectedTruck}\n                  trucks={this.props.trucks}\n                />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainMenu;\n","import React, { Component } from 'react';\n\nclass NfeMainInfo extends Component {\n  render() {\n    return (\n      <div className=\"card m-2 small\">\n        <label className=\"btn btn-secondary btn-sm active\">\n          <input\n            type=\"checkbox\"\n            checked={this.props.isChecked}\n            onChange={(evt) => this.props.onSelectNfe(this.props.xmlObject.nfeProc.NFe.infNFe.ide.nNF)}\n            aria-label=\"Checkbox for following text input\"\n          />{' '}\n          {this.props.xmlObject.nfeProc.NFe.infNFe.ide.nNF}\n        </label>\n\n        <div className=\"card-body small\">\n          {this.props.xmlObject.truck != null ? (\n            <p className=\"font-weight-bold bg-success text-uppercase large\">Veículo: {this.props.xmlObject.truck}</p>\n          ) : null}\n          <p>Razão Social: {this.props.xmlObject.nfeProc.NFe.infNFe.dest.xNome} </p>\n          <p>\n            Endereço: {this.props.xmlObject.nfeProc.NFe.infNFe.dest.enderDest.xLgr}, {this.props.xmlObject.nfeProc.NFe.infNFe.dest.enderDest.nro}\n            <br />\n            {this.props.xmlObject.nfeProc.NFe.infNFe.dest.enderDest.xBairro}\n            <br />\n            {this.props.xmlObject.nfeProc.NFe.infNFe.dest.enderDest.xMun} - {this.props.xmlObject.nfeProc.NFe.infNFe.dest.enderDest.UF}\n            <br />\n            CEP: {this.props.xmlObject.nfeProc.NFe.infNFe.dest.enderDest.CEP}\n          </p>\n          <p>\n            Peso Líquido: {this.props.xmlObject.nfeProc.NFe.infNFe.transp.vol.pesoL}\n            <br />\n            Peso Bruto: {this.props.xmlObject.nfeProc.NFe.infNFe.transp.vol.pesoB}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NfeMainInfo;\n","import React, { Component } from 'react';\nimport NfeMainInfo from './nfeMainInfo';\n\nclass NfesContainer extends Component {\n  render() {\n    return (\n      <div className=\"p-1\">\n        {this.props.xmlObjects.map((xmlObject) => (\n          <NfeMainInfo\n            key={xmlObject.nfeProc.NFe.infNFe.ide.nNF}\n            xmlObject={xmlObject}\n            isChecked={this.props.checkedNfes.includes(xmlObject.nfeProc.NFe.infNFe.ide.nNF)}\n            onSelectNfe={this.props.onSelectNfe}\n          ></NfeMainInfo>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default NfesContainer;\n","/*\tThis work is licensed under Creative Commons GNU LGPL License.\r\n\r\n\tLicense: http://creativecommons.org/licenses/LGPL/2.1/\r\n   Version: 0.9\r\n\tAuthor:  Stefan Goessner/2006\r\n\tWeb:     http://goessner.net/ \r\n*/\r\n\r\nexport const xml2json = (xml, tab) => {\r\n  var X = {\r\n    toObj: function (xml) {\r\n      var o = {};\r\n      if (xml.nodeType == 1) {\r\n        // element node ..\r\n        if (xml.attributes.length)\r\n          // element with attributes  ..\r\n          for (var i = 0; i < xml.attributes.length; i++) o['@' + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || '').toString();\r\n        if (xml.firstChild) {\r\n          // element has child nodes ..\r\n          var textChild = 0,\r\n            cdataChild = 0,\r\n            hasElementChild = false;\r\n          for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n            if (n.nodeType == 1) hasElementChild = true;\r\n            else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) textChild++;\r\n            // non-whitespace text\r\n            else if (n.nodeType == 4) cdataChild++; // cdata section node\r\n          }\r\n          if (hasElementChild) {\r\n            if (textChild < 2 && cdataChild < 2) {\r\n              // structured element with evtl. a single text or/and cdata node ..\r\n              X.removeWhite(xml);\r\n              for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n                if (n.nodeType == 3)\r\n                  // text node\r\n                  o['#text'] = X.escape(n.nodeValue);\r\n                else if (n.nodeType == 4)\r\n                  // cdata node\r\n                  o['#cdata'] = X.escape(n.nodeValue);\r\n                else if (o[n.nodeName]) {\r\n                  // multiple occurence of element ..\r\n                  if (o[n.nodeName] instanceof Array) o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\r\n                  else o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\r\n                } // first occurence of element..\r\n                else o[n.nodeName] = X.toObj(n);\r\n              }\r\n            } else {\r\n              // mixed content\r\n              if (!xml.attributes.length) o = X.escape(X.innerXml(xml));\r\n              else o['#text'] = X.escape(X.innerXml(xml));\r\n            }\r\n          } else if (textChild) {\r\n            // pure text\r\n            if (!xml.attributes.length) o = X.escape(X.innerXml(xml));\r\n            else o['#text'] = X.escape(X.innerXml(xml));\r\n          } else if (cdataChild) {\r\n            // cdata\r\n            if (cdataChild > 1) o = X.escape(X.innerXml(xml));\r\n            else for (var n = xml.firstChild; n; n = n.nextSibling) o['#cdata'] = X.escape(n.nodeValue);\r\n          }\r\n        }\r\n        if (!xml.attributes.length && !xml.firstChild) o = null;\r\n      } else if (xml.nodeType == 9) {\r\n        // document.node\r\n        o = X.toObj(xml.documentElement);\r\n      } else alert('unhandled node type: ' + xml.nodeType);\r\n      return o;\r\n    },\r\n    toJson: function (o, name, ind) {\r\n      var json = name ? '\"' + name + '\"' : '';\r\n      if (o instanceof Array) {\r\n        for (var i = 0, n = o.length; i < n; i++) o[i] = X.toJson(o[i], '', ind + '\\t');\r\n        json += (name ? ':[' : '[') + (o.length > 1 ? '\\n' + ind + '\\t' + o.join(',\\n' + ind + '\\t') + '\\n' + ind : o.join('')) + ']';\r\n      } else if (o == null) json += (name && ':') + 'null';\r\n      else if (typeof o == 'object') {\r\n        var arr = [];\r\n        for (var m in o) arr[arr.length] = X.toJson(o[m], m, ind + '\\t');\r\n        json += (name ? ':{' : '{') + (arr.length > 1 ? '\\n' + ind + '\\t' + arr.join(',\\n' + ind + '\\t') + '\\n' + ind : arr.join('')) + '}';\r\n      } else if (typeof o == 'string') json += (name && ':') + '\"' + o.toString() + '\"';\r\n      else json += (name && ':') + o.toString();\r\n      return json;\r\n    },\r\n    innerXml: function (node) {\r\n      var s = '';\r\n      if ('innerHTML' in node) s = node.innerHTML;\r\n      else {\r\n        var asXml = function (n) {\r\n          var s = '';\r\n          if (n.nodeType == 1) {\r\n            s += '<' + n.nodeName;\r\n            for (var i = 0; i < n.attributes.length; i++) s += ' ' + n.attributes[i].nodeName + '=\"' + (n.attributes[i].nodeValue || '').toString() + '\"';\r\n            if (n.firstChild) {\r\n              s += '>';\r\n              for (var c = n.firstChild; c; c = c.nextSibling) s += asXml(c);\r\n              s += '</' + n.nodeName + '>';\r\n            } else s += '/>';\r\n          } else if (n.nodeType == 3) s += n.nodeValue;\r\n          else if (n.nodeType == 4) s += '<![CDATA[' + n.nodeValue + ']]>';\r\n          return s;\r\n        };\r\n        for (var c = node.firstChild; c; c = c.nextSibling) s += asXml(c);\r\n      }\r\n      return s;\r\n    },\r\n    escape: function (txt) {\r\n      return txt.replace(/[\\\\]/g, '\\\\\\\\').replace(/[\\\"]/g, '\\\\\"').replace(/[\\n]/g, '\\\\n').replace(/[\\r]/g, '\\\\r');\r\n    },\r\n    removeWhite: function (e) {\r\n      e.normalize();\r\n      for (var n = e.firstChild; n; ) {\r\n        if (n.nodeType == 3) {\r\n          // text node\r\n          if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) {\r\n            // pure whitespace text node\r\n            var nxt = n.nextSibling;\r\n            e.removeChild(n);\r\n            n = nxt;\r\n          } else n = n.nextSibling;\r\n        } else if (n.nodeType == 1) {\r\n          // element node\r\n          X.removeWhite(n);\r\n          n = n.nextSibling;\r\n        } // any other node\r\n        else n = n.nextSibling;\r\n      }\r\n      return e;\r\n    },\r\n  };\r\n  if (xml.nodeType == 9)\r\n    // document node\r\n    xml = xml.documentElement;\r\n  var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, '\\t');\r\n  return '{\\n' + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, '')) + '\\n}';\r\n};\r\n","import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport MainMenu from './components/mainMenu';\nimport NfesContainer from './components/nfesContainer';\nimport './App.css';\nimport { xml2json } from './xml2json.js';\n\nclass App extends Component {\n  state = {\n    xmlObjects: [],\n    trucks: [],\n    selectedTruck: '',\n    textAreaAddNewTruck: '',\n    xmlObjectsDisplayed: [],\n    checkedNfes: [],\n    totalWeight: 0.0,\n    selectedWeight: 0.0,\n  };\n\n  handleSelectTruck = (truck) => {\n    let selectedTruck = truck;\n    let textAreaAddNewTruck = truck;\n    this.setState({ selectedTruck, textAreaAddNewTruck });\n  };\n\n  handleSelectNfe = (nfe) => {\n    let checkedNfes = [...this.state.checkedNfes];\n    if (checkedNfes.includes(nfe)) checkedNfes.splice(checkedNfes.indexOf(nfe), 1);\n    else checkedNfes.push(nfe);\n    let selectedWeight = this.calculateSelectedWeight(this.state.xmlObjectsDisplayed, checkedNfes);\n    this.setState({ checkedNfes, selectedWeight });\n  };\n\n  handleAddNewTruck = (truck) => {\n    if (truck == null || truck.length == 0) return;\n    let trucks = [...this.state.trucks];\n    if (!this.state.trucks.includes(truck)) trucks.push(truck);\n    let selectedTruck = truck;\n    let textAreaAddNewTruck = truck;\n    this.setState({ trucks, selectedTruck, textAreaAddNewTruck });\n  };\n\n  handleRemoveTruck = (truck) => {\n    if (truck == null || truck.length == 0) return;\n    let trucks = [...this.state.trucks];\n    if (this.state.trucks.includes(truck)) trucks.splice(trucks.indexOf(truck), 1);\n    let selectedTruck = '';\n    let textAreaAddNewTruck = '';\n    this.setState({ trucks, selectedTruck, textAreaAddNewTruck });\n  };\n\n  handleNewTruckTextAreaOnChange = (evt) => {\n    let textAreaAddNewTruck = evt.target.value;\n    this.setState({ textAreaAddNewTruck });\n  };\n\n  handleAddSelectedFilesToTruck = (truck) => {\n    console.log(truck);\n    if (truck == null || truck.length == 0) return;\n    let xmlObjects = [...this.state.xmlObjects];\n    for (const xmlObject of xmlObjects) {\n      if (this.state.checkedNfes.includes(xmlObject.nfeProc.NFe.infNFe.ide.nNF)) xmlObject.truck = truck;\n    }\n    let checkedNfes = [];\n    this.setState({ xmlObjects, checkedNfes });\n    this.handleShowUnclassifiedFiles();\n  };\n\n  isXmlObjectValid = (xmlObject) => {\n    if (!xmlObject == null) {\n      console.log('ERROR: XML IS NULL!');\n      return false;\n    }\n    if (xmlObject.nfeProc == null) {\n      console.log(`ERROR: XML DOESN'T CONTAIN THE FIELD \"nfeProc\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe == null) {\n      console.log(`ERROR: XML DOESN'T CONTAIN THE FIELD \"NFe\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe == null) {\n      console.log(`ERROR: XML DOESN'T CONTAIN THE FIELD \"infNFe\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe['@Id'] == null) {\n      console.log(`ERROR: XML DOESN'T CONTAIN THE FIELD \"infNFe.Id\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.ide == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"ide\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.ide.nNF == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"nNF\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.dest == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"dest\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.dest.enderDest == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"enderDest\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.transp == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"transp\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.transp.vol == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"vol\"!`);\n      return false;\n    }\n    if (xmlObject.nfeProc.NFe.infNFe.transp.vol.pesoB == null) {\n      console.log(`ERROR: XML ${xmlObject.nfeProc.NFe.infNFe['@Id']} DOESN'T CONTAIN THE FIELD \"pesoB\"!`);\n      return false;\n    }\n    return true;\n  };\n\n  getJsonFromXml = async function (file) {\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n\n      reader.onload = () => {\n        let parser = new DOMParser();\n        let xmlDoc = parser.parseFromString(reader.result, 'text/xml');\n        let jsonFromXml = JSON.parse(xml2json(xmlDoc, '  '));\n\n        resolve(jsonFromXml);\n      };\n\n      reader.readAsText(file);\n    });\n  };\n\n  isXmlObjectSaved(xmlObject, xmlObjects) {\n    for (const xml of xmlObjects) if (xml.nfeProc.NFe.infNFe.ide.nNF === xmlObject.nfeProc.NFe.infNFe.ide.nNF) return true;\n    return false;\n  }\n\n  handleFiles = async (files) => {\n    let xmlObjects = [...this.state.xmlObjects];\n    for (let i = 0; i < files.length; i++) {\n      let jsonFromXml = await this.getJsonFromXml(files[i]);\n      if (this.isXmlObjectValid(jsonFromXml) && !this.isXmlObjectSaved(jsonFromXml, xmlObjects)) {\n        xmlObjects.push(jsonFromXml);\n      } else {\n        //TODO: display some alert\n      }\n    }\n    this.setState({ xmlObjects });\n    this.handleShowAllFiles();\n  };\n\n  handleClearFiles = () => {\n    let xmlObjects = [];\n    let xmlObjectsDisplayed = [];\n    let checkedNfes = [];\n    this.setState({ xmlObjects, xmlObjectsDisplayed, checkedNfes });\n    this.handleShowAllFiles();\n  };\n\n  handleShowAllFiles = () => {\n    let xmlObjectsDisplayed = [...this.state.xmlObjects];\n    let checkedNfes = [];\n    let totalWeight = this.calculateWeight(xmlObjectsDisplayed);\n    let selectedWeight = this.calculateSelectedWeight(xmlObjectsDisplayed, checkedNfes);\n    this.setState({ xmlObjectsDisplayed, checkedNfes, totalWeight, selectedWeight });\n  };\n\n  handleShowUnclassifiedFiles = () => {\n    let xmlObjectsDisplayed = [...this.state.xmlObjects];\n    let checkedNfes = [];\n    for (let i = xmlObjectsDisplayed.length - 1; i >= 0; i--) {\n      if (xmlObjectsDisplayed[i].truck != null && xmlObjectsDisplayed[i].truck != '') {\n        xmlObjectsDisplayed.splice(i, 1);\n      }\n    }\n    let totalWeight = this.calculateWeight(xmlObjectsDisplayed);\n    let selectedWeight = this.calculateSelectedWeight(xmlObjectsDisplayed, checkedNfes);\n    this.setState({ xmlObjectsDisplayed, checkedNfes, totalWeight, selectedWeight });\n  };\n\n  handleShowClassifiedFiles = (truck) => {\n    if (truck == null || truck.length === 0) return;\n    let xmlObjectsDisplayed = [...this.state.xmlObjects];\n    let checkedNfes = [];\n    for (let i = xmlObjectsDisplayed.length - 1; i >= 0; i--) {\n      if (xmlObjectsDisplayed[i].truck == null || xmlObjectsDisplayed[i].truck != truck) {\n        xmlObjectsDisplayed.splice(i, 1);\n      }\n    }\n    let totalWeight = this.calculateWeight(xmlObjectsDisplayed);\n    let selectedWeight = this.calculateSelectedWeight(xmlObjectsDisplayed, checkedNfes);\n    this.setState({ xmlObjectsDisplayed, checkedNfes, totalWeight, selectedWeight });\n  };\n\n  calculateSelectedWeight = (xmlObjects, checkedNfes) => {\n    let selectedWeight = 0.0;\n    for (const xmlObject of xmlObjects) {\n      if (checkedNfes.includes(xmlObject.nfeProc.NFe.infNFe.ide.nNF)) selectedWeight += parseFloat(xmlObject.nfeProc.NFe.infNFe.transp.vol.pesoB);\n    }\n    return selectedWeight;\n  };\n\n  calculateWeight = (xmlObjects) => {\n    let totalWeight = 0.0;\n    for (const xmlObject of xmlObjects) {\n      totalWeight += parseFloat(xmlObject.nfeProc.NFe.infNFe.transp.vol.pesoB);\n    }\n    return totalWeight;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar onFilesSelected={this.handleFiles} onClearFiles={this.handleClearFiles} />\n        {/* <main className=\"container\"></main> */}\n        <MainMenu\n          onAddSelectedFilesToTruck={this.handleAddSelectedFilesToTruck}\n          onRemoveTruck={this.handleRemoveTruck}\n          onAddNewTruck={this.handleAddNewTruck}\n          onNewTruckTextAreaOnChange={this.handleNewTruckTextAreaOnChange}\n          onSelectTruck={this.handleSelectTruck}\n          onShowClassifiedFiles={this.handleShowClassifiedFiles}\n          onShowAllFiles={this.handleShowAllFiles}\n          onShowUnclassifiedFiles={this.handleShowUnclassifiedFiles}\n          textAreaAddNewTruck={this.state.textAreaAddNewTruck}\n          selectedTruck={this.state.selectedTruck}\n          trucks={this.state.trucks}\n        />\n        <NfesContainer xmlObjects={this.state.xmlObjectsDisplayed} checkedNfes={this.state.checkedNfes} onSelectNfe={this.handleSelectNfe}></NfesContainer>\n        <div className=\"fixed-bottom bg-primary text-white small p-1\">\n          {`Peso bruto total: ${this.state.totalWeight.toFixed(2)}kg - Peso bruto selecionado: ${this.state.selectedWeight.toFixed(2)}kg`}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/js/dist/dropdown';\n// import 'bootstrap/dist/js/bootstrap.js';\nimport xml2json from './xml2json';\n\n//npm i react\n//npm i react-router-dom\n//npm i bootstrap\n//npm i --save bootstrap jquery popper.js\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}